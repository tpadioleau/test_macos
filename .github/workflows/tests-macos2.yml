# Copyright (C) The DDC development team, see COPYRIGHT.md file
#
# SPDX-License-Identifier: MIT

name: Tests on macOS 2

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
jobs:
  test-macos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, macos-15]
    runs-on: ${{matrix.os}}
    env:
      Kokkos_ROOT: ${{github.workspace}}/my_opt/kokkos
      paraconf_ROOT: ${{github.workspace}}/my_opt/paraconf
      PDI_ROOT: ${{github.workspace}}/my_opt/pdi
      spdlog_ROOT: ${{github.workspace}}/my_opt/spdlog
      yaml_ROOT: ${{github.workspace}}/my_opt/yaml
      CMAKE_PREFIX_PATH: ${{github.workspace}}/my_opt/pdi
      CMAKE_BUILD_PARALLEL_LEVEL: 4
      CC: clang
      CXX: clang++
      CMAKE_BUILD_TYPE: Debug
    steps:
    - run: brew install mpich hdf5 netcdf
    - uses: actions/checkout@v4
    - uses: actions/checkout@v4
      with:
        repository: yaml/libyaml
        ref: 0.2.5
        path: yaml
    - run: |
        cmake -DBUILD_SHARED_LIBS=ON -B yaml/build -S yaml
        cmake --build yaml/build
        cmake --install yaml/build --prefix $yaml_ROOT
    - uses: actions/checkout@v4
      with:
        repository: pdidev/paraconf
        ref: 1.0.0
        path: paraconf
    - run: |
        mv fix_paraconf_cmake_minimum_required.patch paraconf
        git -C paraconf apply fix_paraconf_cmake_minimum_required.patch
        cmake -DBUILD_SHARED_LIBS=ON -DBUILD_FORTRAN=OFF -DUSE_DEFAULT=SYSTEM -B paraconf/build -S paraconf
        cmake --build paraconf/build
        cmake --install paraconf/build --prefix $paraconf_ROOT
    - uses: actions/checkout@v4
      with:
        repository: gabime/spdlog
        ref: v1.13.0
        path: spdlog
    - run: |
        cmake -DBUILD_SHARED_LIBS=ON -B spdlog/build -S spdlog
        cmake --build spdlog/build
        cmake --install spdlog/build --prefix $spdlog_ROOT
    - uses: actions/checkout@v4
      with:
        repository: pdidev/pdi
        ref: 1.8.3
        path: pdi
    - run: |
        cmake -DBUILD_SHARED_LIBS=ON -B spdlog/build -S spdlog
        cmake --build spdlog/build
        cmake --install spdlog/build --prefix $spdlog_ROOT
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
    - name: Install PDI
      run: |
        export CXXFLAGS="-Wno-deprecated-declarations -Wno-unqualified-std-cast-call"

        mv *.patch pdi/
        git -C pdi apply fix_aligned_alloc.patch fix_abs.patch fix_integer_types.patch fix_override.patch fix_user_code.patch
        cmake \
          -DBUILD_BENCHMARKING=OFF \
          -DBUILD_DOCUMENTATION=OFF \
          -DBUILD_FORTRAN=OFF \
          -DBUILD_TESTING=ON \
          -DCMAKE_CXX_STANDARD=17 \
          -DENABLE_ZSH=OFF \
          -B pdi/pdi/build \
          -S pdi/pdi
        cmake --build pdi/pdi/build
        cmake --install pdi/pdi/build --prefix $PDI_ROOT
        ctest --test-dir pdi/pdi/build --output-on-failure
    - name: Install PDI plugins
      run: |
        export DYLD_LIBRARY_PATH=$paraconf_ROOT/lib:$spdlog_ROOT/lib:$yaml_ROOT/lib

        cmake \
          -DBUILD_BENCHMARKING=OFF \
          -DBUILD_FORTRAN=OFF \
          -DBUILD_HDF5_PARALLEL=OFF \
          -DBUILD_TESTING=ON \
          -DCMAKE_CXX_STANDARD=17 \
          -B pdi/plugins/decl_hdf5/build \
          -S pdi/plugins/decl_hdf5
        cmake --build pdi/plugins/decl_hdf5/build
        ctest --test-dir pdi/plugins/decl_hdf5/build --output-on-failure

        cmake \
          -DBUILD_NETCDF_PARALLEL=OFF \
          -DBUILD_TESTING=ON \
          -DCMAKE_CXX_STANDARD=17 \
          -B pdi/plugins/decl_netcdf/build \
          -S pdi/plugins/decl_netcdf
        cmake --build pdi/plugins/decl_netcdf/build
        ctest --test-dir pdi/plugins/decl_netcdf/build --output-on-failure

        cmake \
          -DBUILD_FORTRAN=OFF \
          -DBUILD_TESTING=ON \
          -DCMAKE_CXX_STANDARD=17 \
          -B pdi/plugins/mpi/build \
          -S pdi/plugins/mpi
        cmake --build pdi/plugins/mpi/build
        ctest --test-dir pdi/plugins/mpi/build --output-on-failure

        cmake \
          -DBUILD_TESTING=ON \
          -DCMAKE_CXX_STANDARD=17 \
          -B pdi/plugins/serialize/build \
          -S pdi/plugins/serialize
        cmake --build pdi/plugins/serialize/build
        ctest --test-dir pdi/plugins/serialize/build --output-on-failure

        cmake \
          -DBUILD_TESTING=ON \
          -DCMAKE_CXX_STANDARD=17 \
          -B pdi/plugins/set_value/build \
          -S pdi/plugins/set_value
        cmake --build pdi/plugins/set_value/build
        ctest --test-dir pdi/plugins/set_value/build --output-on-failure

        cmake \
          -DCMAKE_CXX_STANDARD=17 \
          -B pdi/plugins/trace/build \
          -S pdi/plugins/trace
        cmake --build pdi/plugins/trace/build

        cmake \
          -DBUILD_TESTING=ON \
          -DCMAKE_CXX_STANDARD=17 \
          -B pdi/plugins/user_code/build \
          -S pdi/plugins/user_code
        cmake --build pdi/plugins/user_code/build
        ctest --test-dir pdi/plugins/user_code/build --output-on-failure
    - uses: actions/checkout@v4
      with:
        repository: kokkos/kokkos
        ref: 4.5.01
        path: kokkos
    - run: |
        cmake \
          -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_CXX_STANDARD=17 \
          -DKokkos_ENABLE_DEPRECATED_CODE_4=OFF \
          -DKokkos_ENABLE_DEPRECATION_WARNINGS=OFF \
          -DKokkos_ENABLE_SERIAL=ON \
          -B kokkos/build \
          -S kokkos
        cmake --build kokkos/build
        cmake --install kokkos/build --prefix $Kokkos_ROOT
        cmake -B build
        cmake --build build
        cmake --install build --prefix test
    - name: Inspect PDI library
      run: |
        otool -l $PDI_ROOT/lib/libpdi.1.dylib
        otool -l $Kokkos_ROOT/lib/libkokkoscore.dylib
    - name: Inspect binaries
      run: |
        otool -l ./build/main
        otool -l ./test/bin/main
    - name: Run test
      run: |
        echo "Before sourcing env.sh"
        DYLD_PRINT_LIBRARIES=1 ./build/main || true
        ./test/bin/main || true
        . $PDI_ROOT/share/pdi/env.sh
        echo "After sourcing env.sh"
        ./build/main || true
        ./test/bin/main || true
