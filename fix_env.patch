diff --git a/CMakeLists.txt b/CMakeLists.txt
index a4b2ace5..a203a874 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -201,7 +201,7 @@ include(SuperBuild)
 sbuild_get_env(SBUILD_PATH PATH)
 sbuild_get_env(SBUILD_CPATH CPATH)
 sbuild_get_env(SBUILD_LIBRARY_PATH LIBRARY_PATH)
-sbuild_get_env(SBUILD_LD_LIBRARY_PATH LD_LIBRARY_PATH)
+sbuild_get_env(SBUILD_DYLD_LIBRARY_PATH DYLD_LIBRARY_PATH)
 
 
 ## Fortran
diff --git a/cmake/SuperBuild.cmake b/cmake/SuperBuild.cmake
index fa3ead64..56893243 100644
--- a/cmake/SuperBuild.cmake
+++ b/cmake/SuperBuild.cmake
@@ -39,8 +39,8 @@ function(__sbuild_build_command _SBUILD_OUTVAR)
 		set(_SBUILD_MK_TARGET "${ARGV1}")
 		set(_SBUILD_CM_TARGET --target "${ARGV1}")
 	endif()
-	sbuild_get_env(_SBUILD_ENV_LD_LIBRARY_PATH LD_LIBRARY_PATH)
-	set(_SBUILD_RESULT "${CMAKE_COMMAND}" -E env "LD_LIBRARY_PATH=${_SBUILD_ENV_LD_LIBRARY_PATH}")
+	sbuild_get_env(_SBUILD_ENV_DYLD_LIBRARY_PATH DYLD_LIBRARY_PATH)
+	set(_SBUILD_RESULT "${CMAKE_COMMAND}" -E env "DYLD_LIBRARY_PATH=${_SBUILD_ENV_DYLD_LIBRARY_PATH}")
 	if("${CMAKE_GENERATOR}" MATCHES "Make") #< Use recursive make.
 		list(APPEND _SBUILD_RESULT "\$(MAKE)" ${_SBUILD_MK_TARGET})
 	else() #< Drive the project with "cmake --build".
@@ -222,8 +222,8 @@ function(sbuild_add_dependency _SBUILD_NAME _SBUILD_DEFAULT)
 	endforeach()
 	set(_SBUILD_DEPENDS "${_SBUILD_DEPENDS_NEW}")
 	
-	sbuild_get_env(_SBUILD_ENV_LD_LIBRARY_PATH LD_LIBRARY_PATH)
-	set(_SBUILD_CMAKE_COMMAND "${CMAKE_COMMAND}" -E env "LD_LIBRARY_PATH=${_SBUILD_ENV_LD_LIBRARY_PATH}" "${CMAKE_COMMAND}")
+	sbuild_get_env(_SBUILD_ENV_DYLD_LIBRARY_PATH DYLD_LIBRARY_PATH)
+	set(_SBUILD_CMAKE_COMMAND "${CMAKE_COMMAND}" -E env "DYLD_LIBRARY_PATH=${_SBUILD_ENV_DYLD_LIBRARY_PATH}" "${CMAKE_COMMAND}")
 	
 	ExternalProject_Add("${_SBUILD_NAME}_pkg"
 		CMAKE_COMMAND "${_SBUILD_CMAKE_COMMAND}"
@@ -283,8 +283,8 @@ function(sbuild_add_module _SBUILD_NAME)
 	endforeach()
 	set(_SBUILD_DEPENDS "${_SBUILD_DEPENDS_NEW}")
 	
-	sbuild_get_env(_SBUILD_ENV_LD_LIBRARY_PATH LD_LIBRARY_PATH)
-	set(_SBUILD_CMAKE_COMMAND "${CMAKE_COMMAND}" -E env "LD_LIBRARY_PATH=${_SBUILD_ENV_LD_LIBRARY_PATH}" "${CMAKE_COMMAND}")
+	sbuild_get_env(_SBUILD_ENV_DYLD_LIBRARY_PATH DYLD_LIBRARY_PATH)
+	set(_SBUILD_CMAKE_COMMAND "${CMAKE_COMMAND}" -E env "DYLD_LIBRARY_PATH=${_SBUILD_ENV_DYLD_LIBRARY_PATH}" "${CMAKE_COMMAND}")
 	
 	ExternalProject_Add("${_SBUILD_NAME}_pkg"
 		CMAKE_COMMAND "${_SBUILD_CMAKE_COMMAND}"
@@ -323,7 +323,7 @@ endfunction()
 ###
 function(sbuild_get_env _SBUILD_VAR _SBUILD_ENV_NAME)
 	set(_SBUILD_ENV_VAL "$ENV{${_SBUILD_ENV_NAME}}")
-	if("LD_LIBRARY_PATH" STREQUAL "${_SBUILD_ENV_NAME}" OR "LIBRARY_PATH" STREQUAL "${_SBUILD_ENV_NAME}")
+	if("DYLD_LIBRARY_PATH" STREQUAL "${_SBUILD_ENV_NAME}" OR "LIBRARY_PATH" STREQUAL "${_SBUILD_ENV_NAME}")
 		__sbuild_env_append(_SBUILD_ENV_VAL "${CMAKE_INSTALL_LIBDIR}")
 		__sbuild_env_append(_SBUILD_ENV_VAL "lib")
 	elseif("CPATH" STREQUAL "${_SBUILD_ENV_NAME}")
@@ -350,11 +350,11 @@ if("${BUILD_TESTING}")
 	file(WRITE "${CMAKE_BINARY_DIR}/SubTests.cmake"
 	"set(ADDPATH [=[${CMAKE_BINARY_DIR}/staging/${CMAKE_INSTALL_LIBDIR}:${CMAKE_BINARY_DIR}/staging/lib]=])\n"
 	[===[
-set(LD_LIBRARY_PATH "$ENV{LD_LIBRARY_PATH}")
-if("x${LD_LIBRARY_PATH}x" STREQUAL xx)
-	set(ENV{LD_LIBRARY_PATH} "${ADDPATH}")
+set(DYLD_LIBRARY_PATH "$ENV{DYLD_LIBRARY_PATH}")
+if("x${DYLD_LIBRARY_PATH}x" STREQUAL xx)
+	set(ENV{DYLD_LIBRARY_PATH} "${ADDPATH}")
 else()
-	set(ENV{LD_LIBRARY_PATH} "${ADDPATH}:${LD_LIBRARY_PATH}")
+	set(ENV{DYLD_LIBRARY_PATH} "${ADDPATH}:${DYLD_LIBRARY_PATH}")
 endif()
 ]===]
 	)
